generator client {
  provider = "prisma-client-js"
  output   = "../../prisma/generated/master-client"
}

datasource db {
  provider = "mysql"
  url      = env("MASTER_DATABASE_URL")
}

model board {
  boardId    Int      @id @default(autoincrement()) @db.UnsignedInt
  categoryId Int      @db.UnsignedInt
  category   category @relation(fields: [categoryId], references: [categoryId])
  posts      post[]
}

model category {
  categoryId   Int     @id @default(autoincrement()) @db.UnsignedInt
  categoryName String  @db.VarChar(50)
  boards       board[]
}

model comments {
  commentsId       Int              @id @default(autoincrement()) @db.UnsignedInt
  postId           Int              @db.UnsignedInt
  userId           Int              @db.UnsignedInt
  parentId         Int?             @db.UnsignedInt
  commentsContents String           @db.TinyText
  post             post             @relation(fields: [postId], references: [postId])
  user             user             @relation(fields: [userId], references: [userId])
  photos           comments_photo[]
}

model comments_photo {
  commentsPhotoId Int      @id @default(autoincrement()) @db.UnsignedInt
  commentsId      Int      @db.UnsignedInt
  comment         comments @relation(fields: [commentsId], references: [commentsId])
  fileName        String?  @db.VarChar(100)
  filePath        String?  @db.VarChar(255)
}

model post {
  postId       Int          @id @default(autoincrement()) @db.UnsignedInt
  boardId      Int          @db.UnsignedInt
  userId       Int          @db.UnsignedInt
  postName     String       @db.VarChar(50)
  postContents String       @db.TinyText
  comments     comments[]
  user         user         @relation(fields: [userId], references: [userId])
  board        board        @relation(fields: [boardId], references: [boardId])
  photos       post_photo[]
}

model post_photo {
  postPhotoId Int     @id @default(autoincrement()) @db.UnsignedInt
  postId      Int     @db.UnsignedInt
  post        post    @relation(fields: [postId], references: [postId])
  fileName    String? @db.VarChar(100)
  filePath    String? @db.VarChar(255)
}

model user {
  userId    Int        @id @default(autoincrement()) @db.UnsignedInt
  userName  String     @db.VarChar(50)
  posts     post[]
  comments  comments[]
}